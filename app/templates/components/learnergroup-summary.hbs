{{learnergroup-header learnerGroup=learnerGroup sortUsersBy=sortUsersBy}}
<section class='learnergroup-overview'>
  <div class='learnergroup-overview-actions'>
    {{#if (or isEditing isBulkAssigning)}}
      <button {{action (pipe (action setIsEditing false) (action setIsBulkAssigning false))}}>{{t 'general.close'}}</button>
    {{else}}
      <button {{action setIsBulkAssigning true}} data-test-activate-bulk-assign>{{t 'general.uploadGroupAssignments'}}</button>
      <button {{action setIsEditing true}}>{{t 'general.manage'}}</button>
    {{/if}}
  </div>
  {{#if isBulkAssigning}}
    {{learnergroup-bulk-assignment learnerGroup=learnerGroup done=(action setIsBulkAssigning false)}}
  {{else if (is-fulfilled usersToPassToManager)}}
    <div class='learnergroup-overview-content'>
      {{learnergroup-user-manager
        learnerGroupId=learnerGroupId
        learnerGroupTitle=learnerGroupTitle
        topLevelGroupTitle=topLevelGroupTitle
        cohortTitle=cohortTitle
        users=(await usersToPassToManager)
        sortBy=sortUsersBy
        setSortBy=setSortUsersBy
        isEditing=isEditing
        addUserToGroup=(perform addUserToGroup)
        removeUserFromGroup=(perform removeUserToCohort)
        addUsersToGroup=(perform addUsersToGroup)
        removeUsersFromGroup=(perform removeUsersToCohort)
      }}
    </div>
  {{else}}
    <h1 class='text-center'>{{loading-spinner}}</h1>
  {{/if}}

  <div class="block defaultlocation">
    <label>{{t 'general.defaultLocation'}}:</label>
    <span>
      {{#editable-field
        value=(if location location (t 'general.clickToEdit'))
        save=(action 'changeLocation')
        close=(action 'revertLocationChanges')
        saveOnEnter=true
        closeOnEscape=true
        as |isSaving|
      }}
        <input
          type="text"
          value={{location}}
          oninput={{action (mut location) value="target.value"}}
          disabled={{isSaving}}
          onkeyup={{action 'addErrorDisplayFor' 'location'}}
        >
        {{#if (and (v-get this 'location' 'isInvalid') (is-in showErrorsFor 'location'))}}
          <span class="validation-error-message">{{v-get this 'location' 'message'}}</span>
        {{/if}}
      {{/editable-field}}
    </span>
  </div>
  <div class="block defaultinstructors">
    <label>{{t 'general.defaultInstructors'}}:</label>
    <div>
      {{#if (is-fulfilled learnerGroup.allInstructors)}}
        {{#liquid-if manageInstructors class='crossFade'}}
          {{learnergroup-instructor-manager
            learnerGroup=learnerGroup
            save=(action 'saveInstructors')
            close=(toggle-action 'manageInstructors' this)
          }}
        {{else}}
          <span class='clickable link' {{action (toggle 'manageInstructors' this)}}>
            {{#if (get (await learnerGroup.allInstructors) 'length')}}
              {{join '; ' (map-by 'fullName' (sort-by 'lastName' (await learnerGroup.allInstructors)))}}
            {{else}}
              {{t 'general.none'}}
            {{/if}}
          </span>
        {{/liquid-if}}
      {{else}}
        {{loading-spinner}}
      {{/if}}
    </div>
  </div>
  <div class='block associatedcourses'>
    <label>{{t 'general.associatedCourses'}}:</label>
    <div>
      {{#if (is-fulfilled learnerGroup.courses)}}
        {{#if (get (await learnerGroup.courses) 'length')}}
          {{join '; ' (map-by 'title' (await learnerGroup.courses))}}
        {{else}}
          {{t 'general.none'}}
        {{/if}}
      {{else}}
        {{loading-spinner}}
      {{/if}}
    </div>
  </div>

  <p class='block' data-test-toggle-learnergroup-calendar>
    {{toggle-buttons
      firstOptionSelected=(not showLearnerGroupCalendar)
      firstLabel=(t 'general.hideCalendar')
      secondLabel=(t 'general.showCalendar')
      toggle=(toggle 'showLearnerGroupCalendar' this)
    }}
  </p>
  {{#if showLearnerGroupCalendar}}
    {{learnergroup-calendar learnerGroup=learnerGroup}}
  {{/if}}
</section>


{{learnergroup-subgroup-list parentGroup=learnerGroup}}

<section class='cohortmembers'>
  {{#if (is-fulfilled usersToPassToCohortManager)}}
    {{learnergroup-cohort-user-manager
      users=(await usersToPassToCohortManager)
      learnerGroupTitle=learnerGroupTitle
      topLevelGroupTitle=topLevelGroupTitle
      sortBy=sortUsersBy
      setSortBy=setSortUsersBy
      addUserToGroup=(perform addUserToGroup)
      addUsersToGroup=(perform addUsersToGroup)
    }}
  {{else}}
    {{loading-spinner class='cohortmembers-loading'}}
  {{/if}}
</section>

